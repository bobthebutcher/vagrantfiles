# -*- mode: ruby -*-
# vi: set ft=ruby :          

def get_mac(oui="28:b7:ad")
  "Generate a MAC address"
  nic = (1..3).map{"%0.2x"%rand(256)}.join(":")
  return "#{oui}:#{nic}"
end


Vagrant.configure("2") do |config|

  config.vm.define "fw01" do |node|
    node.vm.box = "juniper/vsrx"
  
    # Turn off shared folders
    node.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  
    # Do not try to insert new SSH key
    node.ssh.insert_key = false
  
    # Give VM time to boot
    node.vm.boot_timeout = 180
  
    # Provider-specific configuration
    node.vm.provider :libvirt do |domain|
      domain.memory = 4096
      domain.cpus = 2
      #domain.management_network_mac = "52:54:00:00:99:99"
    end
  
    node.vm.network :private_network,
      :mac => "#{get_mac()}",
      :libvirt__tunnel_type => 'udp',
      :libvirt__tunnel_local_ip => '127.1.1.2',
      :libvirt__tunnel_local_port => "10001",
      :libvirt__tunnel_ip => '127.1.1.1',
      :libvirt__tunnel_port => "10001",
      :libvirt__iface_name => "eth1",
      auto_config: false

    node.vm.network :private_network,
      :mac => "#{get_mac()}",
      :libvirt__tunnel_type => 'udp',
      :libvirt__tunnel_local_ip => '127.1.1.2',
      :libvirt__tunnel_local_port => "10002",
      :libvirt__tunnel_ip => '127.1.1.1',
      :libvirt__tunnel_port => "10002",
      :libvirt__iface_name => "eth2",
      auto_config: false
  end                        

  config.vm.define "fw02" do |node|
    node.vm.box = "juniper/vsrx-packetmode"
  
    # Turn off shared folders
    node.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true
  
    # Do not try to insert new SSH key
    node.ssh.insert_key = false
  
    # Give VM time to boot
    node.vm.boot_timeout = 180
  
    # Provider-specific configuration
    node.vm.provider :libvirt do |domain|
      domain.memory = 4096
      domain.cpus = 2
      #domain.management_network_mac = "52:54:00:00:99:99"
    end
  
    node.vm.network :private_network,
      :mac => "#{get_mac()}",
      :libvirt__tunnel_type => 'udp',
      :libvirt__tunnel_local_ip => '127.1.1.1',
      :libvirt__tunnel_local_port => "10001",
      :libvirt__tunnel_ip => '127.1.1.2',
      :libvirt__tunnel_port => "10001",
      :libvirt__iface_name => "eth1",
      auto_config: false

    node.vm.network :private_network,
      :mac => "#{get_mac()}",
      :libvirt__tunnel_type => 'udp',
      :libvirt__tunnel_local_ip => '127.1.1.1',
      :libvirt__tunnel_local_port => "10002",
      :libvirt__tunnel_ip => '127.1.1.2',
      :libvirt__tunnel_port => "10002",
      :libvirt__iface_name => "eth2",
      auto_config: false
  end
end                        
